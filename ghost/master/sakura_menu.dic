SakuraMenuGreetings : nonoverlap
{
	"Hello."
	"How can I help you?"
}

//Because there is an all modifier here, you don't need to write -- between menu options
OnSakuraMenu : all
{
	"\0\b[2]\s[0]\![set,autoscroll,disable]"
	if SHIORI3FW.Eventid == "OnMouseDoubleClick"; SakuraMenuGreetings //The check here is so they won't comment if you click the back button. Remove if you prefer
	
	"\n\n\_q"
	
	"\![*]\q[So...,OnAiTalk]\n"
	if LastTalk != ""; "\![*]\__q[OnLastTalk]I'm sorry, what was that?\__q"
	"\n\n"
	
	"\![*]\__q[OnAskQuestion]Can I ask you something?\__q"
	
	"\n\n"
	
	if SHIORI3FW.BalloonName == "Stuck to a Filing Cabinet"; "\![*]\__q[OnCustomizeBalloon]About those stickynotes...\__q\n"
	else; "\n"
	
	"\![*]\__q[OnTalkRateMenu]Can we change the pace?\__q\n\n"
	
	"\![*]\q[Nevermind,blank]"	
}

OnLastTalk
{
	LastTalk
}

OnCustomizeBalloon : all
{
	_colors = ("yellow","pink","blue","orange","green","purple","notary","inkwell","shimmer","starlight")
	_b = ""
	if reference0 == "off"; _b = "100"
	elseif reference0 != ""; _b = reference0 + "2"
	else; _b = "2"
	
	
	"\C\![lock,balloonrepaint]\c\0\s[0]\b[%(_b),--fallback=2]\![set,autoscroll,disable]\_q\*"
	/*
	
		Need some sort of setup to tell which colors are on vs off
		Probably just an array of 0 and 1 tbqh... that would be easy
		Need a preview button that switches to the color you want to see
		All on and all off should be easy with the array being 0s and 1s
		Defaults will be a preset
		and........
	
	*/
	"\f[align,center]— Color rotation —\n\f[align,left]\n"
	for _i = 0; _i < ARRAYSIZE(_colors); _i++
	{
		_name = _colors[_i]
		
		"\![*]"
		switch BalloonColors[_i]
		{
			"\f[color,disable]\q[%(_name),OnToggleBalloonColor,%(_i),1]\f[color,default]"
			"\q[%(_name),OnToggleBalloonColor,%(_i),0]"
		}
		
		if _i % 2 == 0; "\n \n[-100]\f[align,right]"
		else; "\n\f[align,left]"
	}
	
	"\n\f[align,center]"
	"\![*]\q[All on,OnToggleAllBalloons,on]  \![*]\q[Defaults,OnToggleAllBalloons,default]  \![*]\q[All off,OnToggleAllBalloons,off]"
	
	"\n\n\f[align,center]"
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Nevermind,blank]"
	"\![unlock,balloonrepaint]"
}

OnToggleBalloonColor
{
	BalloonColors[TOINT(reference0)] = TOINT(reference1)
	"\C\![raise,OnCustomizeBalloon,%(reference0)]"
}

OnToggleAllBalloons
{
	if reference0 == "on"
	{
		BalloonColors = (1,1,1,1,1,1,1,1,1,1)
	}
	elseif reference0 == "off"
	{
		BalloonColors = (0,0,0,0,0,0,0,0,0,0)
	}
	else //default
	{
		BalloonColors = (1,1,1,1,1,1,0,0,0,0)
	}
	"\C\![raise,OnCustomizeBalloon]"
}

OnTalkRateMenu : all
{	
	//This is just setting up a label, you may need to add to it or tweak it if you change what rates are available
	_talkrate = "Off"
	if aitalkinterval == 30; _talkrate = "30 seconds"
	elseif aitalkinterval == 60; _talkrate = "1 minute"
	elseif aitalkinterval == 180; _talkrate = "3 minutes"
	elseif aitalkinterval == 300; _talkrate = "5 minutes"
	elseif aitalkinterval == 600; _talkrate = "10 minutes"
	
	"\0\b[0]\s[0]\![set,autoscroll,disable]\_q"
	"Current interval: %(_talkrate)\n\n"
	
	"\![*]\q[Off,OnTalkRateChange,0]\n"
	"\![*]\q[30 seconds,OnTalkRateChange,30]\n"
	"\![*]\q[1 minute,OnTalkRateChange,60]\n"
	"\![*]\q[3 minutes,OnTalkRateChange,180]\n"
	"\![*]\q[5 minutes,OnTalkRateChange,300]\n"
	"\![*]\q[10 minutes,OnTalkRateChange,600]\n"
	"\n"
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Nevermind,blank]"
}

OnTalkRateChange
{
	aitalkinterval = TOINT(reference0)
}

OnAskQuestion
{
	"\![open,inputbox,OnAskQuestion.Input,-1,--balloon=__INPUT%(C_BYTE1)BALLOON__]\t\*"
	--
	"\0\b[0]oh sure sure sure sure whats up"
	--
	"\_q\n\n\![*]\__q[OnCancelQuestion]Actually, nevermind...\__q"
}

OnCancelQuestion
{
	"\![close,inputbox,OnAskQuestion.Input]"
	--
	"oh ok"
}

OnAskQuestion.Input
{
	/*
		Possible intents:
		
		growl
		hiss
		screaming
		excited
		interested
		stressed
		thoughtful
		confused
		inquisitive
		hesitant
		repeating
		soft
		loud
		long
		short
		one word
		definitive
		demanding
		
		Repeated letter reference:
		
		aaa - screaming
		eee - excited (also triggered by multiple scattered !s)
		ooo - interested
		hhh - stressed
		mmm - thoughtful
		sss - hiss (also triggered by multiple scattered Hs)
		rrr - growl (also triggered by multiple scattered Gs)
		?? - confused
	*/
	
	_input = TOLOWER(reference0)
	_intents = ProcessQuestion(_input)
	
	"\_q\0\b[0]You asked: %(reference0)\n\nOutput: %(ProcessQuestion(reference0))\n\n"
	--
	if Intent("soft,growl",_intents)
	{
		"oh is that a threat? hmmmmmmmm"
	}
	elseif Intent("screaming,loud",_intents)
	{
		"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA WHY ARE WE SCREAMING AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
	}
	elseif "gold" _in_ _input
	{
		"gold!!! my gold"
	}
	elseif _input == ""
	{
		"oh, uh, nothing to say, oh no"
	}
	else //Didn't match any intents
	{
		"Mysterious..."
	}
	--
	"\n\n%(REPLACE(OnAskQuestion,'\_q',''))"
}

Intent
{
	_search = _argv[0]
	_input = _argv
	_input[0] = IARRAY //erase search term(s)
	if "," _in_ _search; _search = SPLIT(_search,",")
	
	foreach _search; _term
	{
		if ASEARCH(_term,_input) == -1; {0; return}
	}
	1
}

//Here is where we process the question text and determine what sort of tone Boss thinks the user is taking/what topics they might be talking about
ProcessQuestion
{
	_input = TOLOWER(_argv[0])
	_len = STRLEN(_input)
	_output = IARRAY
	
	/*
		Possible intents:
		
		growl
		hiss
		screaming
		excited
		interested
		stressed
		thoughtful
		confused
		inquisitive
		hesitant
		repeating
		soft
		loud
		long
		short
		one word
		definitive
		demanding
		
		Repeated letter reference:
		
		aaa - screaming
		eee - excited (also triggered by multiple scattered !s)
		ooo - interested
		hhh - stressed
		mmm - thoughtful
		sss - hiss (also triggered by multiple scattered Hs)
		rrr - growl (also triggered by multiple scattered Gs)
		?? - confused
	*/
	
	if LetterCount(_input,"g") + LetterCount(_input,"r") >= 10 || "rrr" _in_ _input; _output ,= "growl"
	if LetterCount(_input,"h") >= 10 || "sss" _in_ _input; _output ,= "hiss"
	if "aaa" _in_ _input; _output ,= "screaming"
	if "eee" _in_ _input; _output ,= "excited" //same as ! but i think that's ok...
	if "ooo" _in_ _input; _output ,= "interested"
	if "hhh" _in_ _input; _output ,= "stressed"
	if "mmm" _in_ _input; _output ,= "thoughtful"
	if "??" _in_ _input; _output ,= "confused"
	elseif LetterCount(_input,"?") >= 3 || SUBSTR(_input,_len - 1,1) == "?"; _output ,= "inquisitive"
	if LetterCount(_input,"!") >= 2; _output ,= "excited"
	if LetterCount(_input,"...") >= 2; _output ,= "hesitant"
	if RepeatedWords(_input); _output ,= "repeating" //right now works with 2 or more words, do we want this to be 3 or more?
	if _input == _argv[0]; _output ,= "soft" //All lowercase
	if TOUPPER(_input) == _argv[0]; _output ,= "loud" //All uppercase
	if STRLEN(_input) >= 100; _output ,= "long"
	if STRLEN(_input) <= 10; _output ,= "short"
	if ARRAYSIZE(SPLIT(_input," ")) == 1; _output ,= "one word"
	if SUBSTR(_input,_len - 1,1) == "." && SUBSTR(_input,_len - 2,1) != "."; _output ,= "definitive"
	if "!?" _in_ _input || "?!" _in_ _input; _output ,= "demanding"
	
	_output
}

//Count the amount of a specific character in a string
//You CAN put multiple letters in at once, but it will only count each instance it finds once, without overlapping.
//Argument 0: The string to check
//Argument 1: The letter(s) to search for (case sensitive)
//Examples:
//LetterCount("Ukagaka","a") //Returns 3
//LetterCount("Ukagaka","ka") //Returns 2
LetterCount
{
	_input = _argv[0]
	_let = _argv[1]
	_replaced = REPLACE(_input,_let,"")
	_num = STRLEN(_input) - STRLEN(_replaced)
	if STRLEN(_let) > 1; _num /= STRLEN(_let)
	_num
}

//idk why i made this, this is silly and doesn't work
// RepeatedLetters
// {
	// _input = _argv[0]
	// _let = _argv[1]
	// _replaced = REPLACE(_input,_let,"")
	// _num = STRLEN(_input) - STRLEN(_replaced)
	// _num >= 3
// }

RepeatedWords
{
	_input = _argv[0]
	if " " _in_ _input
	{
		_input = SPLIT(_input," ")
		_first = _input[0]
		foreach _input; _word
		{
			if _word != _first; {0; return}
		}
		1
	}
	else; 0
}